@model SampleProject.Models.Authorization
@{
    ViewBag.Title = "Log On";
}

<div class="row-fluid">
    <h2>Log On</h2>
    <p>
        Please enter your user name and password.
    </p>
</div>
<div class="row-fluid">
    <div class="span 10">
        @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count() > 0)
        {
            <div class="alert alert-info" role="alert">
                <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <div class="container">
                    <div class="row">
                        <div class="col-sm-1">
                            <i class="fa fa-warning fa-fw fa-2x margin-right-sm"></i>
                        </div>
                        <div class="col-lg-10">
                            @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationSummary(false, "Login was unsuccessful. Please correct the errors and try again.").ToString()))
                        </div>
                    </div>
                </div>
            </div>
        }
        @using (Html.BeginForm("Login", "Authorization", FormMethod.Post ))
        {

            <div class="editor-label">
                @Html.LabelFor(m => m.EmailAddress)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.EmailAddress)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <br />
            <button type="submit" class="btn btn-primary">Log On</button>
        }
    </div>
</div>
